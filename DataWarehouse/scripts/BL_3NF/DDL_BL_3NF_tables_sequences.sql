/*
 DDL code to create tables and sequences for BL_3NF layer.
 	Run once after schema creating. 
 */

SET search_path = BL_3NF;

---- Regions table

CREATE SEQUENCE IF NOT EXISTS ce_regions_region_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_REGIONS (
	REGION_ID BIGINT NOT NULL, 
	REGION_SRC_ID VARCHAR(15) NOT NULL,
	REGION_SOURCE_TABLE VARCHAR(50) NOT NULL,
	REGION_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	REGION_NAME VARCHAR(15) NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(REGION_ID)
	);

  		
---- Countries table

CREATE SEQUENCE IF NOT EXISTS ce_countries_country_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;  
   
CREATE TABLE IF NOT EXISTS CE_COUNTRIES (
	COUNTRY_ID BIGINT NOT NULL,
	COUNTRY_SRC_ID VARCHAR(5) NOT NULL,
	COUNTRY_SOURCE_TABLE VARCHAR(50) NOT NULL,
	COUNTRY_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	COUNTRY_NAME VARCHAR(100) NOT NULL,
	COUNTRY_CODE VARCHAR(5) NOT NULL,
	COUNTRY_REGION_ID BIGINT NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(COUNTRY_ID),
	CONSTRAINT FK_COUNTRY_REGION_ID FOREIGN KEY(COUNTRY_REGION_ID)
				REFERENCES CE_REGIONS(REGION_ID)
	);
    			
    		
---- Addresses table
CREATE SEQUENCE IF NOT EXISTS ce_addresses_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_ADDRESSES ( 
	ADDRESS_ID BIGINT NOT NULL,
	ADDRESS_SRC_ID VARCHAR(50) NOT NULL,
	ADDRESS_SOURCE_TABLE VARCHAR(50) NOT NULL,
	ADDRESS_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	ADDRESS_TEXT VARCHAR(1000) NOT NULL,
	ADDRESS_POSTCODE VARCHAR(15) NOT NULL,
	ADDRESS_COUNTRY_ID BIGINT NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(ADDRESS_ID),
	CONSTRAINT FK_ADDRESS_COUNTRY_ID FOREIGN KEY(ADDRESS_COUNTRY_ID)
				REFERENCES CE_COUNTRIES(COUNTRY_ID)
	);

    		
---- Customers table

CREATE SEQUENCE IF NOT EXISTS ce_customers_customer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_CUSTOMERS (
	CUSTOMER_ID BIGINT NOT NULL,
	CUSTOMER_SRC_ID VARCHAR(50) NOT NULL,
	CUSTOMER_SOURCE_TABLE VARCHAR(50) NOT NULL,
	CUSTOMER_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	CUSTOMER_NAME VARCHAR(100) NOT NULL,
	CUSTOMER_GENDER VARCHAR(5) NOT NULL,
	CUSTOMER_EMAIL VARCHAR(50) NOT NULL,
	CUSTOMER_BIRTHDATE_DT DATE NOT NULL,
	CUSTOMER_ADDRESS_ID BIGINT NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(CUSTOMER_ID),
	CONSTRAINT FK_CUSTOMER_ADDRESS_ID FOREIGN KEY(CUSTOMER_ADDRESS_ID)
				REFERENCES CE_ADDRESSES(ADDRESS_ID)
	);
    			

---- Shipments table

CREATE SEQUENCE IF NOT EXISTS ce_shipments_shipment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_SHIPMENTS ( 
	SHIPMENT_ID BIGINT NOT NULL,
	SHIPMENT_SRC_ID VARCHAR(30) NOT NULL,
	SHIPMENT_SOURCE_TABLE VARCHAR(50) NOT NULL,
	SHIPMENT_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	SHIPMENT_TRACK_NUMBER VARCHAR(30) NOT NULL,
	SHIPMENT_DT DATE NOT NULL,
	SHIPMENT_RECEIVED_DT DATE NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(SHIPMENT_ID)
	);


---- Currencies table

CREATE SEQUENCE IF NOT EXISTS ce_currencies_currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_CURRENCIES ( 
	CURRENCY_ID INT NOT NULL,
	CURRENCY_SRC_ID VARCHAR(5) NOT NULL,
	CURRENCY_SOURCE_TABLE VARCHAR(50) NOT NULL,
	CURRENCY_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	CURRENCY_CODE VARCHAR(5) NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(CURRENCY_ID)
	);
    			

---- Promotions table

CREATE SEQUENCE IF NOT EXISTS ce_promotions_promotion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_PROMOTIONS ( 
	PROMOTION_ID BIGINT NOT NULL,
	PROMOTION_SRC_ID VARCHAR(50) NOT NULL,
	PROMOTION_SOURCE_TABLE VARCHAR(50) NOT NULL,
	PROMOTION_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	PROMOTION_NAME VARCHAR(100) NOT NULL,
	PROMOTION_DESCRIPTION VARCHAR(2550) NOT NULL,
	PROMOTION_FEE_DISCOUNT_PERCENT SMALLINT,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(PROMOTION_ID)
	);
    			

---- Product_types table

CREATE SEQUENCE IF NOT EXISTS ce_product_types_product_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_PRODUCT_TYPES ( 
	PRODUCT_TYPE_ID INT NOT NULL,
	PRODUCT_TYPE_SRC_ID VARCHAR(5) NOT NULL,
	PRODUCT_TYPE_SOURCE_TABLE VARCHAR(50) NOT NULL,
	PRODUCT_TYPE_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	PRODUCT_TYPE_CODE VARCHAR(5) NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(PRODUCT_TYPE_ID)
	);
    			

---- Products table

CREATE SEQUENCE IF NOT EXISTS ce_products_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_PRODUCTS ( 
	PRODUCT_ID BIGINT NOT NULL,
	PRODUCT_SRC_ID VARCHAR(255) NOT NULL,
	PRODUCT_SOURCE_TABLE VARCHAR(50) NOT NULL,
	PRODUCT_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	PRODUCT_URL VARCHAR(255) NOT NULL,
	PRODUCT_DESCRIPTION VARCHAR(2550) NOT NULL,
	PRODUCT_IMAGE_URL VARCHAR(100) NOT NULL,
	PRODUCT_ALBUM_TITLE VARCHAR(2550) NOT NULL,
	PRODUCT_TYPE_ID INT NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(PRODUCT_ID),
	CONSTRAINT FK_PRODUCT_TYPE_ID FOREIGN KEY(PRODUCT_TYPE_ID)
				REFERENCES CE_PRODUCT_TYPES(PRODUCT_TYPE_ID)
	);
    			

---- Genres table

CREATE SEQUENCE IF NOT EXISTS ce_genres_genre_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_GENRES ( 
	GENRE_ID BIGINT NOT NULL,
	GENRE_SRC_ID VARCHAR(30) NOT NULL,
	GENRE_SOURCE_TABLE VARCHAR(50) NOT NULL,
	GENRE_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	GENRE VARCHAR(50) NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(GENRE_ID)
	);
    			

---- Artists table

CREATE SEQUENCE IF NOT EXISTS ce_artists_artist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_ARTISTS_SCD ( 
	ARTIST_ID BIGINT NOT NULL,
	ARTIST_SRC_ID VARCHAR(50) NOT NULL,
	ARTIST_SOURCE_TABLE VARCHAR(50) NOT NULL,
	ARTIST_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	ARTIST_NAME VARCHAR(100) NOT NULL,
	ARTIST_GENRE_ID BIGINT NOT NULL,
	START_DT DATE NOT NULL,
	END_DT DATE NOT NULL,
	IS_ACTIVE VARCHAR(5) NOT NULL,
	INSERT_DT DATE NOT NULL,
	PRIMARY KEY(ARTIST_ID, START_DT),
	CONSTRAINT FK_ARTIST_GENRE_ID FOREIGN KEY(ARTIST_GENRE_ID)
				REFERENCES CE_GENRES(GENRE_ID)
	);
    			

---- Sales table

CREATE SEQUENCE IF NOT EXISTS ce_sales_sale_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS CE_SALES (
	SALE_ID BIGINT NOT NULL,
	SALE_SRC_ID VARCHAR(2550) NOT NULL,
	SALE_SOURCE_TABLE VARCHAR(50) NOT NULL,
	SALE_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	SHIPMENT_ID BIGINT NOT NULL,
	CUSTOMER_ID BIGINT NOT NULL,
	PRODUCT_ID BIGINT NOT NULL,
	PROMOTION_ID BIGINT NOT NULL,
	CURRENCY_ID INT NOT NULL,
	ARTIST_ID BIGINT NOT NULL,
	EVENT_DT DATE NOT NULL,
	SALE_UTC TIMESTAMP NOT NULL,
	SALE_AMOUNT_PAID NUMERIC(10,2),
	SALE_AMOUNT_PAID_USD NUMERIC(10,2),
	SALE_PRODUCT_PRICE NUMERIC(10, 2),
	SALE_PRODUCT_TYPE_PLATFORM_FEE_PERCENT SMALLINT,
	SALE_PROMOTION_FEE_DISCOUNT_PERCENT SMALLINT,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(SALE_ID),
	CONSTRAINT FK_SHIPMENT_ID FOREIGN KEY(SHIPMENT_ID) REFERENCES CE_SHIPMENTS(SHIPMENT_ID),
	CONSTRAINT FK_CUSTOMER_ID FOREIGN KEY(CUSTOMER_ID) REFERENCES CE_CUSTOMERS(CUSTOMER_ID),
	CONSTRAINT FK_PRODUCT_ID FOREIGN KEY(PRODUCT_ID) REFERENCES CE_PRODUCTS(PRODUCT_ID),
	CONSTRAINT FK_PROMOTION_ID FOREIGN KEY(PROMOTION_ID) REFERENCES CE_PROMOTIONS(PROMOTION_ID),
	CONSTRAINT FK_CURRENCY_ID FOREIGN KEY(CURRENCY_ID) REFERENCES CE_CURRENCIES(CURRENCY_ID)
	);

