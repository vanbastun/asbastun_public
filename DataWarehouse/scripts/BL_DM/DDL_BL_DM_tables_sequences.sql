/*
 DDL code to create tables and sequences for BL_DM layer.
 	Run once after schema creating. 
 */

SET search_path = BL_DM;

---- Customers table
CREATE SEQUENCE IF NOT EXISTS dim_customers_customer_surr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS DIM_CUSTOMERS (
	CUSTOMER_SURR_ID BIGINT NOT NULL,
	CUSTOMER_SRC_ID VARCHAR(50) NOT NULL,
	CUSTOMER_SOURCE_TABLE VARCHAR(50) NOT NULL,
	CUSTOMER_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	CUSTOMER_NAME VARCHAR(100) NOT NULL,
	CUSTOMER_GENDER VARCHAR(5) NOT NULL,
	CUSTOMER_EMAIL VARCHAR(50) NOT NULL,
	CUSTOMER_BIRTHDATE_DT DATE NOT NULL,
	CUSTOMER_ADDRESS_SRC_ID VARCHAR(50) NOT NULL,
	CUSTOMER_ADDRESS_TEXT VARCHAR(1000) NOT NULL,
	CUSTOMER_ADDRESS_POSTCODE VARCHAR(15) NOT NULL,
	CUSTOMER_COUNTRY_SRC_ID VARCHAR(5) NOT NULL,
	CUSTOMER_COUNTRY_NAME VARCHAR(100) NOT NULL,
	CUSTOMER_COUNTRY_CODE VARCHAR(5) NOT NULL,
	CUSTOMER_REGION_SRC_ID VARCHAR(5) NOT NULL,
	CUSTOMER_REGION_NAME VARCHAR(15) NOT NULL,	
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(CUSTOMER_SURR_ID)	
	);

---- Products table
CREATE SEQUENCE IF NOT EXISTS dim_products_product_surr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS DIM_PRODUCTS ( 
	PRODUCT_SURR_ID BIGINT NOT NULL,
	PRODUCT_SRC_ID VARCHAR(255) NOT NULL,
	PRODUCT_SOURCE_TABLE VARCHAR(50) NOT NULL,
	PRODUCT_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	PRODUCT_URL VARCHAR(255) NOT NULL,
	PRODUCT_DESCRIPTION VARCHAR(2550) NOT NULL,
	PRODUCT_IMAGE_URL VARCHAR(100) NOT NULL,
	PRODUCT_ALBUM_TITLE VARCHAR(2550) NOT NULL,
	PRODUCT_TYPE_SRC_ID VARCHAR(5) NOT NULL,
	PRODUCT_TYPE_CODE VARCHAR(5) NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(PRODUCT_SURR_ID)
	);
   			   		
 		
---- Shipments table
CREATE SEQUENCE IF NOT EXISTS dim_shipments_shipment_surr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS DIM_SHIPMENTS ( 
	SHIPMENT_SURR_ID BIGINT NOT NULL,
	SHIPMENT_SRC_ID VARCHAR(30) NOT NULL,
	SHIPMENT_SOURCE_TABLE VARCHAR(50) NOT NULL,
	SHIPMENT_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	SHIPMENT_TRACK_NUMBER VARCHAR(30) NOT NULL,
	SHIPMENT_DT DATE NOT NULL,
	SHIPMENT_RECEIVED_DT DATE NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(SHIPMENT_SURR_ID)
	);
    	
    		
---- Currencies table
CREATE SEQUENCE IF NOT EXISTS dim_currencies_currency_surr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS DIM_CURRENCIES ( 
	CURRENCY_SURR_ID INT NOT NULL,
	CURRENCY_SRC_ID VARCHAR(5) NOT NULL,
	CURRENCY_SOURCE_TABLE VARCHAR(50) NOT NULL,
	CURRENCY_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	CURRENCY_CODE VARCHAR(5) NOT NULL,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(CURRENCY_SURR_ID)
	);


---- Promotions table
CREATE SEQUENCE IF NOT EXISTS dim_promotions_promotion_surr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS DIM_PROMOTIONS ( 
	PROMOTION_SURR_ID BIGINT NOT NULL,
	PROMOTION_SRC_ID VARCHAR(50) NOT NULL,
	PROMOTION_SOURCE_TABLE VARCHAR(50) NOT NULL,
	PROMOTION_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	PROMOTION_NAME VARCHAR(100) NOT NULL,
	PROMOTION_DESCRIPTION VARCHAR(2550) NOT NULL,
	PROMOTION_FEE_DISCOUNT_PERCENT SMALLINT,
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(PROMOTION_SURR_ID)
	);


---- Artists table
CREATE SEQUENCE IF NOT EXISTS dim_artists_scd_artist_surr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS DIM_ARTISTS_SCD ( 
	ARTIST_SURR_ID BIGINT NOT NULL,
	ARTIST_SRC_ID VARCHAR(50) NOT NULL,
	ARTIST_SOURCE_TABLE VARCHAR(50) NOT NULL,
	ARTIST_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	ARTIST_NAME VARCHAR(100) NOT NULL,
	ARTIST_GENRE_SRC_ID VARCHAR(50) NOT NULL,
	ARTIST_GENRE VARCHAR(50) NOT NULL,
	START_DT DATE NOT NULL,
	END_DT DATE NOT NULL,
	IS_ACTIVE VARCHAR(5) NOT NULL,
	INSERT_DT DATE NOT NULL,
	PRIMARY KEY(ARTIST_SURR_ID)
	);

    		
----DIM Time
CREATE TABLE IF NOT EXISTS BL_DM.DIM_TIME_DD (
	TIME_ID DATE NOT NULL,
	DIM_TIME_YEAR INT NOT NULL,
	DIM_TIME_MM SMALLINT NOT NULL,
	DIM_TIME_MONTH_NAME VARCHAR(20) NOT NULL,
	DIM_TIME_DAY SMALLINT NOT NULL,
	DIM_TIME_DAY_OF_YEAR INT NOT NULL,
	DIM_TIME_WEEKDAY_NAME VARCHAR(12) NOT NULL,
	DIM_TIME_CALENDAR_WEEK_NO SMALLINT NOT NULL,
	DIM_TIME_FORMATTED_DATE VARCHAR(15) NOT NULL,
	DIM_TIME_QUARTER VARCHAR(2) NOT NULL,
	DIM_TIME_YEAR_QUARTER VARCHAR(7) NOT NULL,
	DIM_TIME_YEAR_MONTH VARCHAR(7) NOT NULL,
	DIM_TIME_YEAR_CALENDAR_WEEK VARCHAR(7) NOT NULL,
	DIM_TIME_WEEKEND VARCHAR(7) NOT NULL,
	DIM_TIME_USA_HOLIDAY VARCHAR(15) NOT NULL,
	DIM_TIME_CURRENT_WEEK_STARTDAY DATE NOT NULL,
	DIM_TIME_CURRENT_WEEK_ENDDAY DATE NOT NULL,
	DIM_TIME_CURRENT_MONTH_STARTDAY DATE NOT NULL,
	DIM_TIME_CURRENT_MONTH_ENDDAY DATE NOT NULL,
	CONSTRAINT DIM_TIME_DD_TIME_ID_PK PRIMARY KEY (TIME_ID)
);
    		
    		
---- Sales table
CREATE SEQUENCE IF NOT EXISTS fct_sales_dd_sale_surr_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS FCT_SALES_DD (
	SALE_SURR_ID BIGINT NOT NULL,
	SALE_SRC_ID VARCHAR(255) NOT NULL,
	SALE_SOURCE_TABLE VARCHAR(50) NOT NULL,
	SALE_SOURCE_SYSTEM VARCHAR(50) NOT NULL,
	SHIPMENT_SURR_ID BIGINT NOT NULL,
	CUSTOMER_SURR_ID BIGINT NOT NULL,
	PRODUCT_SURR_ID BIGINT NOT NULL,
	PROMOTION_SURR_ID BIGINT NOT NULL,
	CURRENCY_SURR_ID INT NOT NULL,
	ARTIST_SURR_ID BIGINT NOT NULL,
	EVENT_DT DATE NOT NULL,
	SALE_UTC TIMESTAMP NOT NULL,
	FCT_AMOUNT_PAID_CURRENCY NUMERIC(10,2),
	FCT_AMOUNT_PAID_USD NUMERIC(10,2),
	FCT_PRODUCT_PRICE_CURRENCY NUMERIC(10, 2),
	FCT_PRODUCT_TYPE_PLATFORM_FEE_PERCENT SMALLINT,
	FCT_PROMOTION_FEE_DISCOUNT_PERCENT SMALLINT,
	FCT_PLATFORM_REVENUE_USD NUMERIC(10,2),
	FCT_ARTIST_REVENUE_USD NUMERIC(10,2),
	INSERT_DT DATE NOT NULL,
	UPDATE_DT DATE NOT NULL,
	PRIMARY KEY(SALE_SURR_ID, EVENT_DT) )
	PARTITION BY RANGE(event_dt) 
--	,	CONSTRAINT FK_SHIPMENT_SURR_ID FOREIGN KEY(SHIPMENT_SURR_ID) REFERENCES DIM_SHIPMENTS(SHIPMENT_SURR_ID),
--	CONSTRAINT FK_CUSTOMER_SURR_ID FOREIGN KEY(CUSTOMER_SURR_ID) REFERENCES DIM_CUSTOMERS(CUSTOMER_SURR_ID),
--	CONSTRAINT FK_PRODUCT_SURR_ID FOREIGN KEY(PRODUCT_SURR_ID) REFERENCES DIM_PRODUCTS(PRODUCT_SURR_ID),
--	CONSTRAINT FK_PROMOTION_SURR_ID FOREIGN KEY(PROMOTION_SURR_ID) REFERENCES DIM_PROMOTIONS(PROMOTION_SURR_ID),
--	CONSTRAINT FK_CURRENCY_SURR_ID FOREIGN KEY(CURRENCY_SURR_ID) REFERENCES DIM_CURRENCIES(CURRENCY_SURR_ID),
--	CONSTRAINT FK_ARTIST_SURR_ID FOREIGN KEY(ARTIST_SURR_ID) REFERENCES DIM_ARTISTS_SCD(ARTIST_SURR_ID),
--	CONSTRAINT FK_EVENT_DATE FOREIGN KEY(EVENT_DT) REFERENCES DIM_TIME_DD(TIME_ID)
	;

----fct_sales_dd partitions
------Partitions 2021	
CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2021_q1 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2021-01-01'::date) TO ('2021-04-01'::date);

CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2021_q2 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2021-04-01'::date) TO ('2021-07-01'::date);

CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2021_q3 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2021-07-01'::date) TO ('2021-10-01'::date);

CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2021_q4 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2021-10-01'::date) TO ('2022-01-01'::date);

------Partition 2020
CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2020_q1 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2020-01-01'::date) TO ('2020-04-01'::date);

CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2020_q2 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2020-04-01'::date) TO ('2020-07-01'::date);

CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2020_q3 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2020-07-01'::date) TO ('2020-10-01'::date);

CREATE TABLE IF NOT EXISTS bl_dm.fct_sales_dd_2020_q4 PARTITION OF bl_dm.fct_sales_dd
	FOR VALUES FROM ('2020-10-01'::date) TO ('2021-01-01'::date);